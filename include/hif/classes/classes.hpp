/// @file classes.hpp
/// @brief
/// @copyright (c) 2024-2025 Electronic Systems Design (ESD) Lab @ UniVR This
/// file is distributed under the BSD 2-Clause License. See LICENSE.md for
/// details.

#pragma once

#include "hif/classes/Action.hpp"
#include "hif/classes/Aggregate.hpp"
#include "hif/classes/AggregateAlt.hpp"
#include "hif/classes/Alias.hpp"
#include "hif/classes/Alt.hpp"
#include "hif/classes/Array.hpp"
#include "hif/classes/Assign.hpp"
#include "hif/classes/BaseContents.hpp"
#include "hif/classes/Bit.hpp"
#include "hif/classes/BitValue.hpp"
#include "hif/classes/Bitvector.hpp"
#include "hif/classes/BitvectorValue.hpp"
#include "hif/classes/Bool.hpp"
#include "hif/classes/BoolValue.hpp"
#include "hif/classes/Break.hpp"
#include "hif/classes/Cast.hpp"
#include "hif/classes/Char.hpp"
#include "hif/classes/CharValue.hpp"
#include "hif/classes/CompositeType.hpp"
#include "hif/classes/Const.hpp"
#include "hif/classes/Contents.hpp"
#include "hif/classes/Continue.hpp"
#include "hif/classes/DataDeclaration.hpp"
#include "hif/classes/Declaration.hpp"
#include "hif/classes/DesignUnit.hpp"
#include "hif/classes/Entity.hpp"
#include "hif/classes/Enum.hpp"
#include "hif/classes/EnumValue.hpp"
#include "hif/classes/Event.hpp"
#include "hif/classes/Expression.hpp"
#include "hif/classes/Field.hpp"
#include "hif/classes/FieldReference.hpp"
#include "hif/classes/File.hpp"
#include "hif/classes/For.hpp"
#include "hif/classes/ForGenerate.hpp"
#include "hif/classes/Function.hpp"
#include "hif/classes/FunctionCall.hpp"
#include "hif/classes/Generate.hpp"
#include "hif/classes/GlobalAction.hpp"
#include "hif/classes/Identifier.hpp"
#include "hif/classes/If.hpp"
#include "hif/classes/IfAlt.hpp"
#include "hif/classes/IfGenerate.hpp"
#include "hif/classes/Instance.hpp"
#include "hif/classes/Int.hpp"
#include "hif/classes/IntValue.hpp"
#include "hif/classes/Library.hpp"
#include "hif/classes/LibraryDef.hpp"
#include "hif/classes/Member.hpp"
#include "hif/classes/Null.hpp"
#include "hif/classes/Object.hpp"
#include "hif/classes/PPAssign.hpp"
#include "hif/classes/Parameter.hpp"
#include "hif/classes/ParameterAssign.hpp"
#include "hif/classes/Pointer.hpp"
#include "hif/classes/Port.hpp"
#include "hif/classes/PortAssign.hpp"
#include "hif/classes/PrefixedReference.hpp"
#include "hif/classes/Procedure.hpp"
#include "hif/classes/ProcedureCall.hpp"
#include "hif/classes/Range.hpp"
#include "hif/classes/Real.hpp"
#include "hif/classes/RealValue.hpp"
#include "hif/classes/Record.hpp"
#include "hif/classes/RecordValue.hpp"
#include "hif/classes/RecordValueAlt.hpp"
#include "hif/classes/Reference.hpp"
#include "hif/classes/ReferencedAssign.hpp"
#include "hif/classes/Return.hpp"
#include "hif/classes/Scope.hpp"
#include "hif/classes/ScopedType.hpp"
#include "hif/classes/Signal.hpp"
#include "hif/classes/Signed.hpp"
#include "hif/classes/SimpleType.hpp"
#include "hif/classes/Slice.hpp"
#include "hif/classes/State.hpp"
#include "hif/classes/StateTable.hpp"
#include "hif/classes/String.hpp"
#include "hif/classes/StringValue.hpp"
#include "hif/classes/SubProgram.hpp"
#include "hif/classes/Switch.hpp"
#include "hif/classes/SwitchAlt.hpp"
#include "hif/classes/System.hpp"
#include "hif/classes/TPAssign.hpp"
#include "hif/classes/Time.hpp"
#include "hif/classes/TimeValue.hpp"
#include "hif/classes/Transition.hpp"
#include "hif/classes/Type.hpp"
#include "hif/classes/TypeDeclaration.hpp"
#include "hif/classes/TypeDef.hpp"
#include "hif/classes/TypeReference.hpp"
#include "hif/classes/TypeTP.hpp"
#include "hif/classes/TypeTPAssign.hpp"
#include "hif/classes/TypedObject.hpp"
#include "hif/classes/Unsigned.hpp"
#include "hif/classes/Value.hpp"
#include "hif/classes/ValueStatement.hpp"
#include "hif/classes/ValueTP.hpp"
#include "hif/classes/ValueTPAssign.hpp"
#include "hif/classes/Variable.hpp"
#include "hif/classes/View.hpp"
#include "hif/classes/ViewReference.hpp"
#include "hif/classes/Wait.hpp"
#include "hif/classes/When.hpp"
#include "hif/classes/WhenAlt.hpp"
#include "hif/classes/While.hpp"
#include "hif/classes/With.hpp"
#include "hif/classes/WithAlt.hpp"
